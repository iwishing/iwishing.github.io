<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>小科普--为什么判断闰年不能单单看这一年是否为4的倍数</title>
      <link href="/2019/04/18/%E5%B0%8F%E7%A7%91%E6%99%AE/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%88%A4%E6%96%AD%E9%97%B0%E5%B9%B4%E4%B8%8D%E8%83%BD%E5%8D%95%E5%8D%95%E7%9C%8B%E8%BF%99%E4%B8%80%E5%B9%B4%E6%98%AF%E5%90%A6%E4%B8%BA4%E7%9A%84%E5%80%8D%E6%95%B0/"/>
      <url>/2019/04/18/%E5%B0%8F%E7%A7%91%E6%99%AE/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%88%A4%E6%96%AD%E9%97%B0%E5%B9%B4%E4%B8%8D%E8%83%BD%E5%8D%95%E5%8D%95%E7%9C%8B%E8%BF%99%E4%B8%80%E5%B9%B4%E6%98%AF%E5%90%A6%E4%B8%BA4%E7%9A%84%E5%80%8D%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="为什么判断闰年不能单单看这一年是否为4的倍数"><a href="#为什么判断闰年不能单单看这一年是否为4的倍数" class="headerlink" title="为什么判断闰年不能单单看这一年是否为4的倍数"></a>为什么判断闰年不能单单看这一年是否为4的倍数</h1><h3 id="答："><a href="#答：" class="headerlink" title="答："></a>答：</h3><p>地球绕太阳运行周期为365天5小时48分46秒（合365.24219天）即一回归年。公历的平年只有365日，比回归年短约0.2422 日，所余下的时间约为四年累计一天，故四年于2月加1天，使当年的历年长度为366日，这一年就为闰年。现行公历中每400年有97个闰年。按照每四年一个闰年计算，平均每年就要多算出0.0078天，这样经过四百年就会多算出大约3天来。因此每四百年中要减少三个闰年。所以公历规定：年份是整百数时，必须是400的倍数才是闰年；不是400的倍数的年份，即使是4的倍数也不是闰年。</p><h3 id="因此"><a href="#因此" class="headerlink" title="因此"></a>因此</h3><p>我们判断闰年，需要这样写<br><code>year%400 == 0||year%4 == 0&amp;&amp;year%100 != 0</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>大数据学习--小实验</title>
      <link href="/2019/04/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--%E5%B0%8F%E5%AE%9E%E9%AA%8C/"/>
      <url>/2019/04/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--%E5%B0%8F%E5%AE%9E%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据学习"><a href="#大数据学习" class="headerlink" title="大数据学习"></a>大数据学习</h1><h2 id="–-小实验"><a href="#–-小实验" class="headerlink" title="– 小实验"></a>– 小实验</h2><blockquote><blockquote><p>环境：<br>idea：ultimate 2018.1<br>系统：windows10 家庭版</p></blockquote></blockquote><h3 id="1-Count计数器"><a href="#1-Count计数器" class="headerlink" title="1.Count计数器"></a>1.Count计数器</h3><p><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--%E5%B0%8F%E5%AE%9E%E9%AA%8C/20190409114549258.png" alt></p><h3 id="2-自定义计数器"><a href="#2-自定义计数器" class="headerlink" title="2.自定义计数器"></a>2.自定义计数器</h3><h5 id="1-枚举类型"><a href="#1-枚举类型" class="headerlink" title="(1)枚举类型"></a>(1)枚举类型</h5><p>在mapper中定义<strong>CustomCount</strong>枚举类型</p><pre><code>enum CustomCount{            MAP_RUN_COUNT;        }</code></pre><p>然后在map方法中写<br><code>context.getCounter(CustomCount.MAP_RUN_COUNT).increment(1l);</code><br>后面的increment是增加count值的，参数是1l，参数类型是long<br>计数结果<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--%E5%B0%8F%E5%AE%9E%E9%AA%8C/20190409114918456.png" alt></p><h5 id="2-键值对类型"><a href="#2-键值对类型" class="headerlink" title="(2)键值对类型"></a>(2)键值对类型</h5><p>在reducer中定义<br><code>context.getCounter(&quot;REDUCE_RUN_COUNTS&quot;,&quot;running_counts&quot;).increment(1l);</code><br>使用键值对形式定义计数器<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--%E5%B0%8F%E5%AE%9E%E9%AA%8C/20190411010954240.png" alt></p><h3 id="3-局部合并"><a href="#3-局部合并" class="headerlink" title="3.局部合并"></a>3.局部合并</h3><p>combiner和reducer的区别在于运行的位置：</p><ol><li>Combiner是在每一个maptask所在的节点运行</li><li>Reducer是接受全局所有Mapper的输出结果</li><li>Combiner的意义就是对每一个maptask的输出进行局部汇总，以减少网络传输量</li></ol><p><strong>具体步骤：</strong></p><h5 id="自定义一个Combiner类继承Reducer类，重写reduce方法"><a href="#自定义一个Combiner类继承Reducer类，重写reduce方法" class="headerlink" title="自定义一个Combiner类继承Reducer类，重写reduce方法"></a>自定义一个Combiner类继承Reducer类，重写reduce方法</h5><h5 id="在job中设置-job-setCombinerClass-CustomCombiner-class"><a href="#在job中设置-job-setCombinerClass-CustomCombiner-class" class="headerlink" title="在job中设置:job.setCombinerClass(CustomCombiner.class);"></a>在job中设置:<code>job.setCombinerClass(CustomCombiner.class)</code>;</h5><p><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--%E5%B0%8F%E5%AE%9E%E9%AA%8C/20190411011941037.png" alt><br>这是没有设置Combiner<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--%E5%B0%8F%E5%AE%9E%E9%AA%8C/20190411012753265.png" alt><br>这是设置了Combiner<br>可以明显的看到reduce的输入次数和shuffle过程的字节数有所减少<br><strong><em>注意：求平均值得业务不适用局部聚合，这样会使结果不准确</em></strong></p><h3 id="4-对象封装"><a href="#4-对象封装" class="headerlink" title="4.对象封装"></a>4.对象封装</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>大数据学习--zookeeper</title>
      <link href="/2019/04/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--zookeeper/"/>
      <url>/2019/04/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--zookeeper/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据学习"><a href="#大数据学习" class="headerlink" title="大数据学习"></a>大数据学习</h1><h2 id="–zookeeper"><a href="#–zookeeper" class="headerlink" title="–zookeeper"></a>–zookeeper</h2><blockquote><blockquote><p>环境：<br>zookeeper：3.4.8<br>系统：centos 6.7</p></blockquote></blockquote><h3 id="1-zookeeper简介"><a href="#1-zookeeper简介" class="headerlink" title="1.zookeeper简介"></a>1.zookeeper简介</h3><h5 id="a-简介"><a href="#a-简介" class="headerlink" title="a.简介"></a>a.简介</h5><p>zookeeper是一个分布式协调服务,是给用户的分布式应用程序提供协调服务的，他的服务目标是分布式程序<br>zookeeper本身就是一个分布式程序，只要有半数以上的节点存活，zk就能正常运行<br>zookeeper所提供的服务有：主从协调、服务器节点动态上下线、统一配置管理、分布式共享锁、统一名称服务等等<br>zookeeper底层实质只提供两个服务：</p><ol><li>管理(存储，读取)用户程序提交的数据</li><li>为用户程序提供数据节点监听服务</li></ol><h5 id="b-角色描述"><a href="#b-角色描述" class="headerlink" title="b.角色描述"></a>b.角色描述</h5><ol><li>Leader：领导者，负责进行投票的发起和决议，更新系统状态</li><li>Learner：<ul><li>Follower：用于接受客户请求并向客户端返回结果，在选主过程参与投票</li><li>Observer：接受用户请求，将请求转发给leader节点，但不参与投票，只同步Leader的状态，增加这个角色目的是为了扩展系统，提高读取速度</li></ul></li><li>Client：请求发起方</li></ol><p>zookeeper采用的方式是写任意。通过增加机器，他的吞吐能力和响应能力扩展性非常好，而且，随着机器的增多吞吐能力肯定下降(这也是它建立Observer的原因)，而响应能力取决于具体实现方式，是延迟复制保持最终一致性，还是立即复制快速响应。</p><h5 id="c-特性"><a href="#c-特性" class="headerlink" title="c.特性"></a>c.特性</h5><ul><li>zookeeper：一个Leader，多个Follower相组成的集群</li><li>全局数据一致：每个server保存一份相同的数据副本，client无论连接到哪个server，数据都是一致的</li><li>分布式读写：更新请求转发，由Leader实施</li><li>更新请求顺序执行：来自同一个client的更新请求按其发送顺序依次执行</li><li>数据更新原子性：一次数据更新要么成功，要么失败</li><li>实时性：在一定时间范围内，client能读到最新数据</li></ul><h6 id="Server三种状态"><a href="#Server三种状态" class="headerlink" title="Server三种状态"></a>Server三种状态</h6><p>每个server在工作过程中有三种状态：<br><strong>LOOKING</strong>：当前Server不知道Leader是谁，正在搜寻<br><strong>LEADING</strong>：当前Server即为选举出的Leader<br><strong>FOLLOWING</strong>：leader已经选举出来，当前Server与之同步</p><h6 id="zookeeper选举流程"><a href="#zookeeper选举流程" class="headerlink" title="zookeeper选举流程"></a>zookeeper选举流程</h6><p>leader崩溃或者失去大多数follower时，zk进入恢复模式，重新选举出一个新的leader，让所有的server都恢复到一个正确的状态。zk的选举算法有两个：</p><ul><li>基于basic paxos算法实现</li><li>基于fast paxos算法实现</li></ul><p>系统默认的选举算法为fast paxos算法。</p><h5 id="d-zookeeper数据结构"><a href="#d-zookeeper数据结构" class="headerlink" title="d.zookeeper数据结构"></a>d.zookeeper数据结构</h5><p><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--zookeeper/20190412030737237.png" alt></p><ul><li>层次化的目录结构，命名符合常规文件系统规范</li><li>每个节点在zookeeper中叫做znode，并且其有一个唯一的路径标识</li><li>节点Znode可以包含数据和子节点(ephemeral类型节点不能有子节点)</li><li>客户端应用可以在节点上设置监视器<blockquote><blockquote><p>监视器：客户端可以在节点上设置watch，我们叫监视器，当节点状态发生改变的时候，如数据的增、删、改，将会触发监视器，这是，zk会向客户端发送且仅发送一条通知，因为watch只能触发一次，触发后就被销毁了<br>Znode有两种类型</p><ul><li>短暂(ephemeral):server断开连接时自己删除</li><li>持久(persistent)server断开连接不删除</li></ul><p>Znode有四种形式的目录节点(默认是persistent)</p><ul><li>PERSISTENT</li><li>PERSISTENT_SEQUENTIAL(持久序列/test0000000019)</li><li>EPHENERAL</li><li>EPHENERAL_SEQUENTIAL<br>创建znode时设置顺序标识，znode名称后会附加一个值，顺序号是一个单调递增的计数器，由父节点维护。在分布式系统中，顺序号可以被用于为所有的事件进行全局排序，这样客户端可以通过顺序号推断事件的顺序</li></ul></blockquote></blockquote></li></ul><hr><h3 id="2-zookeeper的安装与配置"><a href="#2-zookeeper的安装与配置" class="headerlink" title="2.zookeeper的安装与配置"></a>2.zookeeper的安装与配置</h3><p><a href="http://archive.apache.org/dist/zookeeper/" target="_blank" rel="noopener">zookeeper下载地址</a><br>我们下载zookeeper-3.4.8<br>上传，解压到/usr/目录<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--zookeeper/20190411043446357.png" alt><br><strong>配置</strong><br>首先配置环境变量<br><code>vim /etc/profile</code><br>我们在文件尾加上</p><pre><code>export ZOOKEEPER_HOME=/usr/zookeeper-3.4.8export PATH=$PATH:$ZOOKEEPER/bin    </code></pre><p><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--zookeeper/20190411043919117.png" alt><br>然后别忘了<code>source /etc/profile</code><br>然后我们需要配置/zookeeper-3.4.8/conf/zoo.cfg文件<br><code>vim /usr/zookeeper-3.4.8/conf/zoo.cfg</code><br>我们在文件末加入</p><pre><code>dataDir= /usr/zookeeper-3.4.8/datadataLogDir= /usr/zookeeper-3.4.8/logserver.1=cbw:2888:3888server.2=cbw1:2888:3888server.3=cbw2:2888:3888</code></pre><p><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--zookeeper/20190411050411254.png" alt><br>dataDir有时候zookeeper自带，我们就不需要加，我们加上后面的就行<br><strong><em>注意：cbw：主机名，2888：心跳端口，3888数据端口</em></strong><br>我们只需要修改主机名就行，然后<strong>server.x</strong>这个<strong>x</strong>表示你有多少台服务器，比如我有<strong>3</strong>台，我就要写到<strong>server.3</strong>，然后每个后面的主机名都要改成那台服务器的主机名。<br>之后，我们需要到/usr/zookeeper-3.4.8/目录下创建data和log这两个文件夹，有时候zookeeper自带了data，那么我们只需要创建log文件夹就行</p><pre><code>mkdir -m 755 datamkdir -m 755 log</code></pre><p>然后我们在data目录下创建myid文件,并向其中写入<strong>1</strong></p><pre><code>touch myidvim myid</code></pre><p><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--zookeeper/20190411050511388.png" alt><br>最后一步，分发</p><pre><code>scp /etc/profile cbw1:/etcscp -r /usr/zookeeper-3.4.8 cbw1:/usr</code></pre><p>然后到cbw1这台机上<br><code>source /etc/profile</code><br>并且修改<strong>myid</strong>文件<br><code>vim /usr/zookeeper-3.4.8/data/myid</code><br>修改内容为2，因为我们在zoo.cfg中写的，cbw1对应的是server.2<br>同理cbw2也是要这样写，这样我们zookeeper集群就搭建完毕</p><h3 id="3-zookeeper命令"><a href="#3-zookeeper命令" class="headerlink" title="3.zookeeper命令"></a>3.zookeeper命令</h3><p>启动zookeeper服务<br><code>zkServer.sh start</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--zookeeper/20190411050252384.png" alt><br>查看zookeeper状态<br><code>zkServer.sh status</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--zookeeper/20190411050157588.png" alt><br>停止zookeeper服务<br><code>zkServer.sh stop</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--zookeeper/20190411050320751.png" alt><br>连接<br><code>zkCli.sh</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--zookeeper/20190412034148480.png" alt><br>Create命令<br><code>create [-e] [-s] path data acl</code></p><ul><li>path指定节点路径</li><li>data指定需要存放的数据(状态信息)<br>创建临时节点<br><code>create -e</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--zookeeper/20190412034346518.png" alt><br><strong><em>注意：临时节点是不能有子节点的</em></strong><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--zookeeper/20190412034724869.png" alt><br>创建永久节点<br><code>create /zk_test data</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--zookeeper/20190412035421447.png" alt><br>创建临时有序节点<br><code>create -e -s /zk_test data</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--zookeeper/20190412035705710.png" alt><br>创建永久有序节点<br><code>create -s /zk_test data</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--zookeeper/20190412035728242.png" alt><br>删除节点<br><code>delete /zk_test</code><br><code>rmr /zk_test</code><br><strong><em>注意：delete不能删除节点下不为空的节点，而rmr可以递归删除</em></strong><br>我们在永久的节点下面创建有序永久节点，如果我们之前在/zk_test下面有3个临时的有序节点，之后客户端断开之后被删除，这个时候你再这个节点创建有序节点的时候，编号不是从0开始，而是从你之前的序号之后开始递增。<h3 id="4-zookeeper-ACL"><a href="#4-zookeeper-ACL" class="headerlink" title="4.zookeeper ACL"></a>4.zookeeper ACL</h3></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>大数据学习--MapReduce程序编写</title>
      <link href="/2019/04/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--MapReduce%E7%A8%8B%E5%BA%8F%E7%BC%96%E5%86%99/"/>
      <url>/2019/04/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--MapReduce%E7%A8%8B%E5%BA%8F%E7%BC%96%E5%86%99/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据学习"><a href="#大数据学习" class="headerlink" title="大数据学习"></a>大数据学习</h1><h2 id="–MapReduce程序编写"><a href="#–MapReduce程序编写" class="headerlink" title="–MapReduce程序编写"></a>–MapReduce程序编写</h2><blockquote><blockquote><p>环境：<br>idea: ultimate 2018.1</p></blockquote></blockquote><p>运行流程示意图<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--MapReduce%E7%A8%8B%E5%BA%8F%E7%BC%96%E5%86%99/20190406011925824.png" alt><br>以wordCount为例</p><h3 id="Mapper："><a href="#Mapper：" class="headerlink" title="Mapper："></a>Mapper：</h3><p>数据输入进来的第一步，可以定制键值对<br>Mapper类需要继承Mapper父类</p><pre><code>public static class WordCountMapper extends Mapper&lt;LongWritable,Text,Text,IntWritable&gt;{protected void map(LongWritable key,Text value, Context context) throws IOException, InterrupteException{        String[] words = value.toString().split(&quot;,&quot;);        for(String word:words){            context.write(new Text(word),new IntWritable(1));        }    }}</code></pre><p><strong>Mapper</strong>父类一共有4个参数<br>1：是数据的偏移量，例如刚进来为0，第二次进来因为已经读完了一行数据，他就等于第一行数据的长度+0，以此类推<br>2：表示下一行数据，在这个例子里面是一行的字符，也就是下面map方法中的value<br>3：输出的key的数据类型<br>4：这个表示map方法产生的value类型，在我们这个例子中是IntWritable型的，所以我们继承的时候要写IntWritable</p><p><strong>map</strong>方法一共有3个参数<br>LongWritable key：偏移量<br>Text value：输入的这行的数据<br>Context：存储map运算后的数据，本例子中<code>context.write(new Text(word),new IntWritable(1))</code>,key是字母，value则为1，因为         字母出现一次就记一次</p><h3 id="Reducer："><a href="#Reducer：" class="headerlink" title="Reducer："></a>Reducer：</h3><p>由流程图可以看出这是最后一步，就是总结的作用吧，汇总所有数据，然后进行输出<br>Reducer类需要继承Reducer父类</p><pre><code>    public static class HadoopReducer extends Reducer&lt;Text, IntWritable, Text, IntWritable&gt; {        //相同的key聚合 几种类型的key调用reduce几次        private IntWritable count = new IntWritable();        @Override        protected void reduce(Text key, Iterable&lt;IntWritable&gt; values, Context context) throws IOException, InterruptedException {            int sum = 0;            for (IntWritable value : values) {                sum += value.get();            }            count.set(sum);            context.write(key, count);        }    }</code></pre><p><strong>Reducer</strong>父类一共有4个参数<br>1：输入的key数据类型，本例中是字母，我们用Text存储<br>2：输入的value数据类型，本例中是频率，我们用IntWritable来存储<br>3：输出key的数据类型<br>4：这个表示reduce方法产生的value类型，在我们这个例子中是IntWritable型的，所以我们继承的时候要写IntWritable<br><strong>reduce</strong>方法一共有3个参数<br>Text key：map运算设置的key<br>Iterable<intwritable> value：这是key相同的value的聚合，本例中因为key是字母，value都是1，所以在这里是这样，如，key=a,如                              果里面有3个a，那么这个value中就是{1,1,1}，这个是迭代式的形式<br>Context：存储reduce运算后的数据，本例子中<code>context.write(new Text(word),new IntWritable(1))</code>,key是字母，value则为频          率</intwritable></p><h3 id="main方法测试"><a href="#main方法测试" class="headerlink" title="main方法测试"></a>main方法测试</h3><pre><code>        Configuration config = new Configuration(); //初始化配置        Job job = Job.getInstance(config);//把任务封装到job对象        job.setJarByClass(HadoopDriver.class);//设置任务启动类        job.setMapperClass(HadoopMapper.class);//设置mapper类        job.setReducerClass(HadoopReducer.class);//设置reducer类        //设置输出的key和value的数据类型， 如果map的输出和reduce输出key-value类型一致  可以不写map        job.setMapOutputKeyClass(Text.class);        job.setMapOutputValueClass(IntWritable.class);        job.setOutputKeyClass(Text.class);        job.setOutputValueClass(IntWritable.class);        //告诉hadoop集群以什么方式读取数据，从哪里读取        job.setInputFormatClass(TextInputFormat.class);//设置输入格式，默认是key-value输入        TextInputFormat.setInputPaths(job, new Path(&quot;D:\\word.txt&quot;));//设置输入目录，本例也就是需要统计字频的文件        //告诉hadoop集群以什么样的方式写入数据，数据写入到哪里        job.setOutputFormatClass(TextOutputFormat.class);//设置输出格式，默认是key-value输出        Path path = new Path(&quot;D:\\wordcount&quot;);//新建路径        FileSystem fs = FileSystem.get(config);//新建文件系统        if (fs.exists(path)) {//判断路径是否存在，如果存在则删除，hadoop的严格的容错性保证每次输出一定是新目录            fs.delete(path, true);        }        TextOutputFormat.setOutputPath(job, path);//设置输出路径        //提交任务        System.exit(job.waitForCompletion(true) ? 0 : 1);//当任务完成时，系统退出</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>大数据学习--idea与maven的安装与配置</title>
      <link href="/2019/04/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/04/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据学习"><a href="#大数据学习" class="headerlink" title="大数据学习"></a>大数据学习</h1><h2 id="–idea与maven的安装与配置"><a href="#–idea与maven的安装与配置" class="headerlink" title="–idea与maven的安装与配置"></a>–idea与maven的安装与配置</h2><blockquote><blockquote><p>环境：<br>idea：ultimate 2018.3<br>maven：3.3.9</p></blockquote></blockquote><h3 id="1-idea的安装与配置"><a href="#1-idea的安装与配置" class="headerlink" title="1.idea的安装与配置"></a>1.idea的安装与配置</h3><p><a href="http://www.jetbrains.com/idea/download/#section=windows" target="_blank" rel="noopener">idea下载地址</a><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326030342882.png" alt><br>选择ultimate版本下载，这只能免费试用，所有我们需要破解，或者申请资格，我是使用学生身份申请一年的使用权<br><strong>开始安装</strong><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326010349306.png" alt><br>选择安装位置<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326010524893.png" alt><br>根据自己的电脑配置选择启动器位数，第一个是在桌面创建一个快捷方式，第二个是选择是否在菜单上增加<code>Open Folder as Project</code>功能，<strong>可√可不√</strong>，第三个是创建文件关联，<strong>可以√也可以不√</strong>，第四个如果电脑jdk环境已经配置了，<strong>可以不√</strong>，一般jdk中有jre，第五个是添加启动器目录到路径，<strong>可√可不√</strong><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326010915397.png" alt><br>下一步，选择开始菜单的文件夹，可以是默认的JetBrains，这样你在开始菜单找J字母，可以找到这个文件夹，里面就有idea<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326011543602.png" alt><br>点击Install，开始安装，等待<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326011626758.png" alt><br>选择重启完成安装<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326012623459.png" alt><br>导入设置文件，但是我们是第一次安装，就选第二个<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326013300882.png" alt><br>同一用户协议<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326013335195.png" alt><br>是否分享数据给JetBrains公司，可以也不可以，自己选择<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326013551923.png" alt><br>设置主题<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326013737527.png" alt><br>选择你要使用的功能，java默认启用了，可以直接下一步<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326013856004.png" alt><br>安装插件，也可以直接下一步<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326013930517.png" alt><br>如果你购买了，可以登录账号，这里我们选择免费试用，只有30天的时间<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326014135892.png" alt><br>到了这一步安装完成了，可以开始使用了<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326014259782.png" alt></p><h3 id="2-maven的安装与配置"><a href="#2-maven的安装与配置" class="headerlink" title="2.maven的安装与配置"></a>2.maven的安装与配置</h3><p><a href="https://archive.apache.org/dist/maven/maven-3/" target="_blank" rel="noopener">maven下载地址</a><br>选择相应版本下载， 这里我们选择3.3.9版本<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326022647784.png" alt><br>下载好了后，解压，放到自己选择的文件夹里面，下一步</p><h4 id="环境变量的配置"><a href="#环境变量的配置" class="headerlink" title="环境变量的配置"></a>环境变量的配置</h4><p>右键我的电脑<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326023116153.png" alt><br>属性-&gt;高级系统设置<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326023146845.png" alt><br>环境变量<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326023202538.png" alt><br>在系统变量里面新建，然后设置<br><code>MAVEN_HOME= &lt;maven根目录&gt;</code><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190327093339417.png" alt><br>然后在Path里面新建，写上<br><code>%MAVEN_HOME%\bin</code><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326023440279.png" alt><br>确定之后，去cmd输入<br><code>mvn -v</code><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326023638470.png" alt><br>出现这个界面，说明maven配置已经完成</p><h4 id="修改资源库"><a href="#修改资源库" class="headerlink" title="修改资源库"></a>修改资源库</h4><p>maven会自动给你下载所需要的jar包， 他默认是从apach的仓库下载，这里我们可以修改仓库，用阿里云或者其他近一点的仓库，这样下载速度会快一些，提高我们的工作效率<br>进入maven根目录<br><code>maven-&gt;conf-&gt;setting.xml</code></p><blockquote><blockquote><p>这个文件要用notepad，或者其他编辑器打开，如果用记事本，里面的东西会很密集，这让修改起来会异常麻烦</p></blockquote></blockquote><p>我们找到<strong>mirrors</strong>标签，写入以下代码</p><pre><code>&lt;mirror&gt;    &lt;id&gt;alimaven&lt;/id&gt;     &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;     &lt;name&gt;aliyun maven&lt;/name&gt;     &lt;url&gt;http://maven.aliyun.com/nexus/content/repositories/central/&lt;/url&gt;&lt;/mirror&gt;</code></pre><p><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8Emaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326030131047.png" alt><br>这代表我们从阿里云的maven仓库下载jar包，修改完成保存退出。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>大数据学习--idea上运行WordCount程序</title>
      <link href="/2019/04/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8A%E8%BF%90%E8%A1%8CWordCount%E7%A8%8B%E5%BA%8F/"/>
      <url>/2019/04/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8A%E8%BF%90%E8%A1%8CWordCount%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据学习"><a href="#大数据学习" class="headerlink" title="大数据学习"></a>大数据学习</h1><h2 id="–idea上运行WordCount程序"><a href="#–idea上运行WordCount程序" class="headerlink" title="–idea上运行WordCount程序"></a>–idea上运行WordCount程序</h2><blockquote><blockquote><p>环境：<br>idea：ultimate 2018.1</p></blockquote></blockquote><p>首先打开idea<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8A%E8%BF%90%E8%A1%8CWordCount%E7%A8%8B%E5%BA%8F/20190326111811050.png" alt><br>界面是这样的，我们新建项目，选择maven项目，project SDK选择自己的jdk根目录，直接next<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8A%E8%BF%90%E8%A1%8CWordCount%E7%A8%8B%E5%BA%8F/20190326111904421.png" alt><br>然后是组id和工件id，自己命名，然后next<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8A%E8%BF%90%E8%A1%8CWordCount%E7%A8%8B%E5%BA%8F/20190326112229603.png" alt><br>然后是项目名称和项目存放地址，然后finish<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8A%E8%BF%90%E8%A1%8CWordCount%E7%A8%8B%E5%BA%8F/20190326112503174.png" alt><br>进来项目主页，右下角会有提示，我们选择右边的<code>Enable Auto-Import</code>，这个是自动给我们导入包<br>我们先设置一下maven环境<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8A%E8%BF%90%E8%A1%8CWordCount%E7%A8%8B%E5%BA%8F/20190326113059444.png" alt><br><code>file-&gt;settings</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8A%E8%BF%90%E8%A1%8CWordCount%E7%A8%8B%E5%BA%8F/20190326113152411.png" alt><br>输入maven到这个页面，我们要修改的是下面两个<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8A%E8%BF%90%E8%A1%8CWordCount%E7%A8%8B%E5%BA%8F/20190327080718366.png" alt><br>第一个设置为maven安装的根目录<br>下面一个设置为<code>maven-&gt;conf-&gt;settings</code><br>然后在pom.xml文件里面添加一些代码<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8A%E8%BF%90%E8%A1%8CWordCount%E7%A8%8B%E5%BA%8F/20190327080859204.png" alt></p><pre><code>&lt;dependencies&gt;        &lt;dependency&gt;            &lt;groupId&gt;log4j&lt;/groupId&gt;            &lt;artifactId&gt;log4j&lt;/artifactId&gt;            &lt;version&gt;1.2.17&lt;/version&gt;        &lt;/dependency&gt;        &lt;dependency&gt;            &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;            &lt;artifactId&gt;hadoop-client&lt;/artifactId&gt;            &lt;version&gt;2.6.1&lt;/version&gt;        &lt;/dependency&gt;&lt;/dependencies&gt;</code></pre><p>log4j是日志打印文件，可以将mapreduce的运行日志打印在控制台，hadoop-client是hadoop客户端，然后我们在src的java文件夹新建一个类，写入wordcount代码</p><pre><code>import org.apache.hadoop.conf.Configuration;import org.apache.hadoop.fs.FileSystem;import org.apache.hadoop.fs.Path;import org.apache.hadoop.io.IntWritable;import org.apache.hadoop.io.LongWritable;import org.apache.hadoop.io.Text;import org.apache.hadoop.mapreduce.Job;import org.apache.hadoop.mapreduce.Mapper;import org.apache.hadoop.mapreduce.Reducer;import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;import java.io.IOException;public class HadoopDriver {    public static class HadoopMapper extends Mapper&lt;LongWritable, Text, Text, IntWritable&gt; {        private Text textKey = new Text();        private IntWritable count = new IntWritable();        @Override        protected void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException {            String[] words = value.toString().split(&quot;,&quot;);            for (String word : words) {                textKey.set(word);                count.set(1);                context.write(textKey, count);            }        }    }    public static class HadoopReducer extends Reducer&lt;Text, IntWritable, Text, IntWritable&gt; {        //相同的key聚合 几种类型的key调用reduce几次        private IntWritable count = new IntWritable();        @Override        protected void reduce(Text key, Iterable&lt;IntWritable&gt; values, Context context) throws IOException, InterruptedException {            int sum = 0;            for (IntWritable value : values) {                sum += value.get();            }            count.set(sum);            context.write(key, count);        }    }    public static void main(String[] args) throws Exception {        Configuration config = new Configuration();        //把任务封装到job对象        Job job = Job.getInstance(config);        //        job.setJarByClass(HadoopDriver.class);        job.setMapperClass(HadoopMapper.class);        job.setReducerClass(HadoopReducer.class);        //指定map        // 如果map的输出和reduce输出key-value类型一致  可以不写map        job.setMapOutputKeyClass(Text.class);        job.setMapOutputValueClass(IntWritable.class);        //指定reducer        job.setOutputKeyClass(Text.class);        job.setOutputValueClass(IntWritable.class);        //告诉hadoop集群 以什么方式读取数据  从哪里读取        job.setInputFormatClass(TextInputFormat.class);        TextInputFormat.setInputPaths(job, new Path(&quot;D:\\word.txt&quot;));        //告诉hadoop集群以什么样的方式写入数据   数据写入到哪里        job.setOutputFormatClass(TextOutputFormat.class);        Path path = new Path(&quot;D:\\wordcount&quot;);        FileSystem fs = FileSystem.get(config);        if (fs.exists(path)) {            fs.delete(path, true);        }        TextOutputFormat.setOutputPath(job, path);        //提交任务        System.exit(job.waitForCompletion(true) ? 0 : 1);    }}</code></pre><p>这些包，maven会帮你自动下载，你只需要导入就行，计算机必须联网<br>我们来测试一下，在D盘创建word.txt文件，里面用<code>，</code>作为分隔符写字母<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8A%E8%BF%90%E8%A1%8CWordCount%E7%A8%8B%E5%BA%8F/20190327081453125.png" alt><br>然后我们运行wordcount程序<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8A%E8%BF%90%E8%A1%8CWordCount%E7%A8%8B%E5%BA%8F/20190327081628077.png" alt><br>运行结果如下，运行日志被打印出来了，可以看到运行成功，没有报错，我们来检查下统计结果，打开D盘，找到wordcount文件夹<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8A%E8%BF%90%E8%A1%8CWordCount%E7%A8%8B%E5%BA%8F/20190327081741092.png" alt><br>里面有4个文件，我们打开最后一个<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--idea%E4%B8%8A%E8%BF%90%E8%A1%8CWordCount%E7%A8%8B%E5%BA%8F/20190327081817875.png" alt><br>可以看到字母统计完成</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>大数据学习--Hive的安装与使用</title>
      <link href="/2019/04/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hive%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/04/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hive%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据学习"><a href="#大数据学习" class="headerlink" title="大数据学习"></a>大数据学习</h1><h2 id="–Hive的安装与使用"><a href="#–Hive的安装与使用" class="headerlink" title="–Hive的安装与使用"></a>–Hive的安装与使用</h2><blockquote><blockquote><p>环境：<br>Hive：2.3.4<br>linux：centOS 6.7<br>VM：15.0.0<br>外部环境：windows 10家庭版<br>远程工具：SecureCRT</p></blockquote></blockquote><h3 id="Hive的安装"><a href="#Hive的安装" class="headerlink" title="Hive的安装"></a>Hive的安装</h3><p><a href="http://mirror.bit.edu.cn/apache/hive/hive-2.3.4/" target="_blank" rel="noopener">Hive下载链接</a><br>下载完成之后，通过远程工具上传到主机里面（略）<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hive%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190331122600668.png" alt><br>上传成功，然后解压缩到相应的目录<br><code>tar -xcvf apache-hive-2.3.4-bin.tar.gz</code><br>解压缩完成后，我们需要配置hive的环境变量<br><code>vim /etc/profile</code><br>进入这个文件，在文件尾加入</p><pre><code>export HIVE_HOME= &lt;hive根目录&gt;export PATH=$PATH:$HIVE_HOME/bin</code></pre><p><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hive%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190331123601806.png" alt><br>保存退出<br><code>source /etc/profile</code><br>使文件生效<br>然后验证是否配置成功<br><code>which hive</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hive%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190331124037464.png" alt><br>出现路径，说明配置成功<br>下一步，我们安装mysql，首先检查一下系统里有没有mysql，这一步需要网络，我们要设置虚拟机为桥接或者net模式<br><code>yum list installed|grep mysql</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hive%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190331125840674.png" alt><br>我的之前安装过，我们先卸载他重装一下<br>卸载<code>yum -y remove mysql.x86_64</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hive%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190331010028817.png" alt><br>卸载成功，重装<br><code>yum -y install mysql-server mysql mysql-devel</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hive%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190331010222060.png" alt><br>安装成功，我们看一下服务启动没有<br><code>service mysqld status</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hive%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190331010815220.png" alt><br>没有启动，我们启动一下，并且设置开机启动<br><code>chkconfig --level 35 mysqld on</code><br>然后我们先手动启动一下mysql服务<br><code>service mysqld start</code><br>通常情况下，新安装好的mysql不需要密码输入<strong>mysql</strong>就能登录，我们为了安全起见，要设置用户名和密码<br>进入/usr/bin目录，然后执行<br><code>ls|grep mysql</code><br>再执行<br><code>mysql_secure_installation</code><br>这个是给新安装的mysql配置用户名和密码的，我们设置一下<br>然后我们使用<br><code>mysql -&lt;用户名&gt; -p&lt;密码&gt;</code><br>就能登录mysql了<br>退出输入<code>exit</code>即可<br>接下来配置hive的文件，进入hive里面的conf目录<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hive%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190331124636570.png" alt><br>能看到hive-default.xml.template和hive-env.sh.template两个文件，我们需要拷贝然后改名字，这就是两个文件的副本，方便我们修改</p><pre><code>cp hive-default.xml.template hive-site.xmlcp hive-env.sh.template hive-env.sh</code></pre><p>然后我们来配置这两个文件</p><h4 id="hive-env-sh"><a href="#hive-env-sh" class="headerlink" title="hive-env.sh"></a>hive-env.sh</h4><p>我们只需要在里面加上hadoop的根目录就行<br><code>HADOOP_HOME=&lt;hadoop根目录&gt;</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hive%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190331014931333.png" alt></p><h4 id="hive-site-xml"><a href="#hive-site-xml" class="headerlink" title="hive-site.xml"></a>hive-site.xml</h4><p>加入</p><pre><code>      &lt;property&gt;        &lt;name&gt;hive.metastore.warehouse.dir&lt;/name&gt;        &lt;value&gt;/home/local/hive-metastore-dir/warehouse&lt;/value&gt;      &lt;/property&gt;    &lt;property&gt;      &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;      &lt;value&gt;jdbc:mysql://cbw:3306/hivedb?createDatabaseIfNotExist=true&lt;/value&gt;    &lt;/property&gt;    &lt;property&gt;      &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;      &lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;    &lt;/property&gt;    &lt;property&gt;      &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;      &lt;value&gt;root&lt;/value&gt;    &lt;/property&gt;    &lt;property&gt;      &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt;      &lt;value&gt;123456&lt;/value&gt;&lt;/property&gt;</code></pre><p>其中<strong>hive.metastore.warehouse.dir</strong>和<strong>javax.jdo.option.ConnectionURL</strong>文件里面有，可用<code>/&lt;字符串&gt;</code>查找并且修改value为上面的值即可，然后修改主机名为自己的主机名<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hive%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190331015902175.png" alt><br>然后下载数据库驱动包<br><a href="https://dev.mysql.com/downloads/file/?id=484819" target="_blank" rel="noopener">https://dev.mysql.com/downloads/file/?id=484819</a><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hive%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190331020502326.png" alt><br>下载完成，上传驱动包到虚拟机<br>然后将驱动包移动到hive安装目录下的lib目录里面<br><code>mv mysql-connector /usr/hive/lib/</code><br>然后重启数据库<br><code>service mysqld restart</code><br>重新初始化元数据信息<br><code>./shematool -dbType mysql -initSchema</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>大数据学习--Hadoop安装与配置</title>
      <link href="/2019/04/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/04/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据学习"><a href="#大数据学习" class="headerlink" title="大数据学习"></a>大数据学习</h1><h2 id="–Hadoop安装与配置"><a href="#–Hadoop安装与配置" class="headerlink" title="–Hadoop安装与配置"></a>–Hadoop安装与配置</h2><blockquote><blockquote><p>环境：<br>jdk：1.8<br>hadoop：2.6.1<br>linux：centOS 6.7<br>VM：15.0.0<br>外部环境：windows 10家庭版<br>远程工具：SecureCRT</p></blockquote></blockquote><h3 id="1-网络环境配置"><a href="#1-网络环境配置" class="headerlink" title="1. 网络环境配置"></a>1. 网络环境配置</h3><p>因为我是处于学习阶段，所以使用vm虚拟机模拟大数据环境。设置3个服务器，选定一个作为主机。<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324110341507.png" alt><br>我选择第一个，也就是service01为主机。</p><h4 id="首先配置ip，将三个服务器ip设置到同一网段。"><a href="#首先配置ip，将三个服务器ip设置到同一网段。" class="headerlink" title="首先配置ip，将三个服务器ip设置到同一网段。"></a>首先配置ip，将三个服务器ip设置到同一网段。</h4><p>修改ip地址有两个方法，一个是修改文件，还有个是进入setup修改。</p><h5 id="通过文件修改："><a href="#通过文件修改：" class="headerlink" title="通过文件修改："></a>通过文件修改：</h5><p><code>vim /etc/sysconfig/network-scripts/ifcfg-eth8</code><br>输入以上命令进入eth8这块网卡，这个虚拟网卡是vm虚拟机自带的，还有一块eth0，我们使用哪一个都一样，只是一个名字。进入后我们可以看到以下界面：<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324111638299.png" alt><br>DEVICE=网卡名称<br>HWADDR=物理地址（硬件地址）<br>TYPE=网卡类型（可以设置成static，静态永久的）<br>UUID=是虚拟机自己设置的<br>ONBOOT=是否开机启动<br>IPADDR=ip地址，也就是我们要修改的<br>NETMASK=子网掩码<br>我们需要修改ip地址，将它的地址和我们自己的电脑，虚拟机的ip这3者的ip设置到同一网段内，另外两台同理，一样设置。</p><h5 id="通过setup界面修改："><a href="#通过setup界面修改：" class="headerlink" title="通过setup界面修改："></a>通过setup界面修改：</h5><p>直接输入<br><code>setup</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324112315705.png" alt><br>进入以上界面，选择第四个，network configuration<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324112414087.png" alt><br>选择第一个<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324112431091.png" alt><br>可以看到我们的eth8这块网卡，选择它<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324112457782.png" alt><br>这里我们可以直接修改网卡名和ip地址，修改完成后，save&amp;quit，然后执行<br><code>service network restart</code><br>重启网络服务，再次输入<br><code>ifconfig</code><br>查看，可以看到，ip已经修改了<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324112731303.png" alt></p><h4 id="下一步修改主机名，不然三个服务器的主机名默认都是root，这对后来设置域名映射时会很麻烦。"><a href="#下一步修改主机名，不然三个服务器的主机名默认都是root，这对后来设置域名映射时会很麻烦。" class="headerlink" title="下一步修改主机名，不然三个服务器的主机名默认都是root，这对后来设置域名映射时会很麻烦。"></a>下一步修改主机名，不然三个服务器的主机名默认都是root，这对后来设置域名映射时会很麻烦。</h4><p>我们输入下面的命令，进入network文件。<br><code>vim /etc/sysconfig/network</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324110702179.png" alt><br>里面的HOSTNAME就是你的主机名，默认是root，修改成自己的，然后ESC，shift+:,wq保存退出<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324110932243.png" alt><br>可以看到，主机名改变了</p><h3 id="2-域名映射，ssh免登陆设置"><a href="#2-域名映射，ssh免登陆设置" class="headerlink" title="2. 域名映射，ssh免登陆设置"></a>2. 域名映射，ssh免登陆设置</h3><p>为了以后使用ssh登录其他服务器方便，我们要做域名映射，不然，每次都是输入一串ip地址，太麻烦，我们要在hosts文件里面修改域名映射，按照上面的教程，我们应该已经将3台服务器的主机名都设置好了，我的是cbw，cbw1，cbw2.<br>输入<br><code>vim /etc/hosts</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324113356993.png" alt><br>进入hosts文件，直接换行，写ip地址，空格，主机名，3台服务器都设置，然后保存退出<br>使用ping测试一下是否能通。<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324113859060.png" alt><br>可以看到，我们直接ping名字也能ping通，说明设置成功。其他几台服务器一样设置，为了方便，我们采用分发的方式，直接将这个文件分发给另外两台服务器。<br><code>scp /etc/hosts cbw1:/etc/hosts</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324114141319.png" alt><br>分发成功，cbw2同理，我们去看看另一台服务器是否能ping域名ping通。<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324114249976.png" alt><br>可以看到，我通过cbw1直接ping主机cbw，是可以ping通的，说明文件分发成功，cbw2也通过相同的方式分发就行。<br>ssh免登陆设置：<br>我们使用ssh远程登录其他服务器的时候要输入密码，而因为hadoop的原因，有很多时候要多次登录其他服务器，每次都输入密码的话，很浪费时间和操作，而且我们使用hadoop的时候基本没有什么安全隐患，所有没必要设置每次都登录输入密码，这样会让操作变繁琐，因此我们要设置ssh免登陆。<br>先在root目录下查看是否有.ssh文件夹，如果没有的话就新建一个。<br>然后输入以下命令<br><code>ssh-keygen</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324115258041.png" alt><br>然后一直回车，直到出现一个图案<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324115350198.png" alt><br>这个时候代表获取密钥成功了，下一步，分发密钥给其他服务器<br><code>ssh-copy-id cbw1</code><br>然后它会提示你输入密码，输入密码之后就代表成功了，下次使用ssh命令进入cbw1时是不用输入密码的，同理，cbw2也配置一下，ssh免登陆设置成功。</p><h3 id="3-服务器配置jdk环境"><a href="#3-服务器配置jdk环境" class="headerlink" title="3. 服务器配置jdk环境"></a>3. 服务器配置jdk环境</h3><blockquote><blockquote><p>以下所说的jdk都是你自己下载的jdk压缩包名，或者解压后的jdk文件夹的名字，我自己的改名叫jdk，方便修改其他东西</p></blockquote></blockquote><p>首先下载好jdk<br><a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">下载地址</a><br>要安装一种远程连接工具，xshell或secureCRT都行，我使用的是secureCRT，连接好主机后，使用alt+p调出sftp窗口<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324121414887.png" alt><br><code>put &lt;文件路径&gt;</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324121526986.png" alt><br>回车，上传jdk到服务器，然后查看root目录下，文件是否上传成功<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324121618909.png" alt><br>可以看到，jdk上传成功<br>再将jdk移动到/usr/文件夹下面<br><code>mv jdk /usr/</code><br>然后解压jdk<br><code>tar -xvzf jdk</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324122335603.png" alt><br>解压成功，可以看到有很多jar包。<br>接下来就是配置环境变量了，进入/etc/profile/文件<br><code>vim /etc/profile</code><br>跳到文件末尾，输入以下内容</p><pre><code>export JAVA_HOME=/usr/jdkexport JRE_HOME=/usr/jdk/jreexport PATH=$JAVA_HOME/bin:$PATHexport CLASSPATH=.$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</code></pre><p><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324122517876.png" alt><br>然后出去输入<br><code>source /etc/profile</code><br>刷新文件并保存，再输入<br><code>java -version</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324122947439.png" alt><br>如果出现以上信息，说明jdk环境已经搭建完毕<br>然后，我们使用scp命令，将jdk和环境配置文件分发到其他的两台服务器上面<br><code>scp -r /usr/jdk/ cbw1:/usr/jdk/</code><br><code>scp /etc/profile/ cbw1:/etc/profile/</code><br>cbw2同理，然后去到另外两台服务器source一下文件,重新加载并生效<br><code>source /etc/profile</code><br>此时，3台服务器的jdk都已经配置完毕</p><h3 id="4-服务器配置Hadoop环境"><a href="#4-服务器配置Hadoop环境" class="headerlink" title="4. 服务器配置Hadoop环境"></a>4. 服务器配置Hadoop环境</h3><p><a href="https://archive.apache.org/dist/hadoop/common/" target="_blank" rel="noopener">hadoop下载地址</a><br>找到相应版本下载即可<br>安装hadoop与jdk同理，上传hadoop压缩包，然后解压，然后放到/usr/里面，开始配置环境变量，进入/etc/profile/文件<br><code>vim /etc/profile</code><br>跳到文件末尾，输入以下内容</p><pre><code>export HADOOP_HOME=/usr/hadoop-2.6.1export PATH=$PATH:$HADOOP_HOME/sbin:$HADOOP_HOME/bin</code></pre><p><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324102915221.png" alt><br>然后出去输入<br><code>source /etc/profile</code><br>刷新文件并保存，再输入<br><code>hadoop version</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324103209122.png" alt><br>如果出现以上画面，说明环境配置完毕</p><h3 id="5-Hadoop文件配置"><a href="#5-Hadoop文件配置" class="headerlink" title="5. Hadoop文件配置"></a>5. Hadoop文件配置</h3><p><code>cd /usr/hadoop2.6.1/etc/hadoop/</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324112142817.png" alt><br>进入这个文件夹，我们需要配置6个文件：</p><h4 id="hadoop-env-xml"><a href="#hadoop-env-xml" class="headerlink" title="hadoop-env.xml"></a>hadoop-env.xml</h4><p>这个文件用来配置jdk的根路径<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324111543938.png" alt><br><code>export JAVA_HOME=/usr/jdk</code><br>在文件末尾加入jdk的路径，保存退出</p><h4 id="core-site-xml"><a href="#core-site-xml" class="headerlink" title="core-site.xml"></a>core-site.xml</h4><p>输入<br><code>vim core-site.xml</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324113841647.png" alt><br>文件内容如上，我们使用默认的文件系统<strong>fs.defaultFS</strong>，我们需要修改的是<strong>fs.defaultFS</strong>的<strong>value</strong>，这个值是告诉文件系统他的老大在哪台服务器启动，也就是主机，我的自然是cbw，后面的<strong>9000</strong>是端口。下面的<strong>hadoop.tmp.dir</strong>是告诉系统，hadoop的源文件存放在哪个目录下，<strong>value</strong>就是我设置的目录，默认是在hadoop根目录下的<strong>hdpdata</strong>文件夹，如果没有这个文件夹，hdfs在格式化的时候会去自动创建这个文件夹。                                                                                 </p><h4 id="hdfs-site-xml"><a href="#hdfs-site-xml" class="headerlink" title="hdfs-site.xml"></a>hdfs-site.xml</h4><p>这个文件是配置上传文件的<strong>blocksize</strong>副本数的<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324114117205.png" alt><br><strong>value</strong>设置为多少，block的副本数就是多少，如果不设置，它默认是3个，这里我们设置为2个</p><h4 id="mapred-site-xml"><a href="#mapred-site-xml" class="headerlink" title="mapred-site.xml"></a>mapred-site.xml</h4><p>这个是配置mapreduce所使用的框架<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324114506643.png" alt><br>我们使用yarn框架</p><h4 id="yarn-site-xml"><a href="#yarn-site-xml" class="headerlink" title="yarn-site.xml"></a>yarn-site.xml</h4><p>这个文件配置yarn的主机和nodemanager的服务<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324114620907.png" alt><br><strong>yarn</strong>的主机我们当然选择cbw，然后nodemanager的<strong>value</strong>我们写mapreduce_shuffle</p><h4 id="slaves"><a href="#slaves" class="headerlink" title="slaves"></a>slaves</h4><p>这个文件时配置所有服务器的<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--Hadoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/20190324114941015.png" alt><br>我们加上所有的服务器域名<br>到这里，需要配置的文件已经全部完成<br>然后格式化<strong>hdfs</strong><br><code>hdfs namenode -format</code><br>格式化完毕，同理，我们要将hadoop文件夹分发给其他服务器，还有环境文件也要分发<br><code>scp -r /usr/hadoop2.6.1 cbw1:/usr/hadoop2.6.1</code><br><code>scp /etc/profile cbw1:/etc/profile</code><br>cbw2同理<br>然后别忘记保存生效<br><code>source /etc/profile</code><br>到这一步hadoop的配置就完成了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/04/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--HA/"/>
      <url>/2019/04/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0--HA/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据学习"><a href="#大数据学习" class="headerlink" title="大数据学习"></a>大数据学习</h1><h2 id="–HA"><a href="#–HA" class="headerlink" title="–HA"></a>–HA</h2><blockquote><blockquote><p>环境</p></blockquote></blockquote><h3 id="HA简介"><a href="#HA简介" class="headerlink" title="HA简介"></a>HA简介</h3><h3 id="集群搭建"><a href="#集群搭建" class="headerlink" title="集群搭建"></a>集群搭建</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux学习随笔</title>
      <link href="/2019/04/18/Linux%E5%AD%A6%E4%B9%A0%E9%9A%8F%E7%AC%94/"/>
      <url>/2019/04/18/Linux%E5%AD%A6%E4%B9%A0%E9%9A%8F%E7%AC%94/</url>
      
        <content type="html"><![CDATA[<h1 id="linux学习随笔"><a href="#linux学习随笔" class="headerlink" title="linux学习随笔"></a>linux学习随笔</h1><blockquote><blockquote><p>环境：<br>系统：centos 6.3<br>VM：15.0.0<br>外部环境：windows 10家庭版<br>远程工具：SecureCRT</p></blockquote></blockquote><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><p>命令<br><code>userdel &lt;用户名&gt;</code><br>今天做实验的时候，发现删除不了用户，原因可能是之前登录过，和root之间切来切去，虽然xiaoming这个用户的远程什么的都断开了，但是有线程还在运行<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Linux%E5%AD%A6%E4%B9%A0%E9%9A%8F%E7%AC%94/20190404011814349.png" alt><br>这样我们可以强制删除<br><code>userdel -f &lt;用户名&gt;</code><br>这样可以强制删除，即使这个用户还在登录，或者其他用户在使用这个用户的home文件夹<br><code>userdel -fr &lt;用户名&gt;</code><br>加上<strong>r</strong>选项，可以在删除的时候讲home文件夹下面的用户目录一起删除<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Linux%E5%AD%A6%E4%B9%A0%E9%9A%8F%E7%AC%94/20190404012048561.png" alt><br>home目录的xiaoming也没了<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Linux%E5%AD%A6%E4%B9%A0%E9%9A%8F%E7%AC%94/20190404012119519.png" alt></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java学习--JDK的下载与配置</title>
      <link href="/2019/04/18/Java%E5%AD%A6%E4%B9%A0--JDK%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/04/18/Java%E5%AD%A6%E4%B9%A0--JDK%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Java学习"><a href="#Java学习" class="headerlink" title="Java学习"></a>Java学习</h1><h2 id="–JDK的下载与配置"><a href="#–JDK的下载与配置" class="headerlink" title="–JDK的下载与配置"></a>–JDK的下载与配置</h2><blockquote><blockquote><p>环境：<br>jdk:1.8<br>系统：windows10 家庭版</p></blockquote></blockquote><h3 id="JDK下载"><a href="#JDK下载" class="headerlink" title="JDK下载"></a>JDK下载</h3><p><a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">下载地址</a><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Java%E5%AD%A6%E4%B9%A0--JDK%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326031324146.png" alt><br>我们下载jdk1.8版本，windows x64的<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Java%E5%AD%A6%E4%B9%A0--JDK%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326031528449.png" alt><br>下载完成后我们运行安装文件，开始安装之后，点击下一步<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Java%E5%AD%A6%E4%B9%A0--JDK%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326032453469.png" alt><br>到达定制安装界面，我们修改一下安装位置就行，然后下一步<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Java%E5%AD%A6%E4%B9%A0--JDK%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326032542742.png" alt><br>正在安装<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Java%E5%AD%A6%E4%B9%A0--JDK%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326032748546.png" alt><br>确定<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Java%E5%AD%A6%E4%B9%A0--JDK%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326032826119.png" alt><br>安装jre，修改安装路径，下一步<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Java%E5%AD%A6%E4%B9%A0--JDK%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326033039868.png" alt><br>安装完成</p><h3 id="JDK环境配置"><a href="#JDK环境配置" class="headerlink" title="JDK环境配置"></a>JDK环境配置</h3><p>右键我的电脑-&gt;属性<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Java%E5%AD%A6%E4%B9%A0--JDK%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326033220297.png" alt><br>左上角高级系统设置<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Java%E5%AD%A6%E4%B9%A0--JDK%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326033254314.png" alt><br>右下角环境变量<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Java%E5%AD%A6%E4%B9%A0--JDK%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326033330303.png" alt><br>在系统变量里面新建<strong>JAVA_HOME</strong>环境变量<br><code>JAVA_HOME= &lt;jdk安装根目录&gt;</code><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Java%E5%AD%A6%E4%B9%A0--JDK%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326033922213.png" alt><br>然后向Path里面新建路径</p><pre><code>%JAVA_HOME%\bin%JAVA_HOME%\lib\tools.jar%JAVA_HOME%\lib\dt.jar</code></pre><p><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Java%E5%AD%A6%E4%B9%A0--JDK%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326034149740.png" alt><br>然后打开电脑cmd终端，输入java和javac<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Java%E5%AD%A6%E4%B9%A0--JDK%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326034655984.png" alt><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Java%E5%AD%A6%E4%B9%A0--JDK%E7%9A%84%E4%B8%8B%E8%BD%BD%E4%B8%8E%E9%85%8D%E7%BD%AE/20190326034718377.png" alt><br>上面一个是java命令，下面一个是javac命令，如果两个命令都能行，说明java环境配置成功</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/04/18/Idea%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2019/04/18/Idea%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Idea的快捷键"><a href="#Idea的快捷键" class="headerlink" title="Idea的快捷键"></a>Idea的快捷键</h1><blockquote><blockquote><p>环境：<br>idea：ultimate 2018.1<br>系统：windows10 家庭版</p></blockquote></blockquote><h2 id="1-psvm"><a href="#1-psvm" class="headerlink" title="1.psvm"></a>1.psvm</h2><p>可以直接输出main方法</p><pre><code>    public static void main(String[] args) {    }</code></pre><h2 id="2-sout"><a href="#2-sout" class="headerlink" title="2.sout"></a>2.sout</h2><p>可以字节输出打印语句<br><code>System.out.println();</code><br>小技巧：<br>使用sout的时候，用变量.sout可以直接打印出输出语句，并将变量放在括号中</p><pre><code>s.soutSystem.out.println(s);</code></pre><h2 id="3-alt-Enter"><a href="#3-alt-Enter" class="headerlink" title="3.alt+Enter"></a>3.alt+Enter</h2><p>在需要导入包的变量上按，可以快速导入需要的包</p><h2 id="4-ctrl-alt-v"><a href="#4-ctrl-alt-v" class="headerlink" title="4.ctrl+alt+v"></a>4.ctrl+alt+v</h2><p>可以快速补全语句，如<br><code>new String();</code><br>可以快速补全为<br><code>String string = new String();</code></p><h2 id="5-alt-insert"><a href="#5-alt-insert" class="headerlink" title="5.alt+insert"></a>5.alt+insert</h2><p>可以快速插入构造器，getter和setter方法等</p><h2 id="6-ctrl-i"><a href="#6-ctrl-i" class="headerlink" title="6.ctrl+i"></a>6.ctrl+i</h2><p>可以快速实现该类所实现的接口的方法</p><h2 id="7-ctrl-shift-c"><a href="#7-ctrl-shift-c" class="headerlink" title="7.ctrl+shift+c"></a>7.ctrl+shift+c</h2><p>可以快速注释大片代码</p><h2 id="8-ctrl-shift-x"><a href="#8-ctrl-shift-x" class="headerlink" title="8.ctrl+shift+x"></a>8.ctrl+shift+x</h2><p>可以快速取消大片注释</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/04/18/Idea%E6%89%93jar%E5%8C%85/"/>
      <url>/2019/04/18/Idea%E6%89%93jar%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Idea打包jar包"><a href="#Idea打包jar包" class="headerlink" title="Idea打包jar包"></a>Idea打包jar包</h1><blockquote><blockquote><p>环境：<br>idea：ultimate 2018.1<br>系统：windows10 家庭版</p></blockquote></blockquote><p>1.先将代码修改成通用格式<br>一些常量修改为形参，如路径<br><code>Path path = new Path(&quot;D:\\test.txt&quot;);</code><br>可以修改为<br><code>Path path = new Path(args[0]);</code><br>2.修改完毕我们可以开始打包<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Idea%E6%89%93jar%E5%8C%85/20190409040343424.png" alt><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Idea%E6%89%93jar%E5%8C%85/20190409040503623.png" alt><br><strong>File</strong>-&gt;<strong>Project Structure</strong>-&gt;<strong>Artifacts</strong>-&gt;<strong>+号</strong>-&gt;<strong>JAR</strong>-&gt;<strong>From modules with dependencies</strong><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Idea%E6%89%93jar%E5%8C%85/20190409041019553.png" alt><br>在Main Class中找到自己要打包的class<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Idea%E6%89%93jar%E5%8C%85/20190409041214894.png" alt><br>下面那个是元数据信息，我们可以默认目录，也可以自己选择，然后<strong>ok</strong><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Idea%E6%89%93jar%E5%8C%85/20190409041904186.png" alt><br>这个目录是之后方jar包的目录，我们可以选择到自己项目的目录，方便查找，然后Apply，ok<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Idea%E6%89%93jar%E5%8C%85/20190409042256223.png" alt><br>之后我们点击Build-&gt;Build Artifacts<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Idea%E6%89%93jar%E5%8C%85/20190409042324094.png" alt><br>点击Build<br>这个时候我们进入刚刚设置的存放jar包的目录<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/Idea%E6%89%93jar%E5%8C%85/20190409043044229.png" alt><br>可以发现打包成功</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>c++学习--运算符重载</title>
      <link href="/2019/04/18/c++%E5%AD%A6%E4%B9%A0--%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/"/>
      <url>/2019/04/18/c++%E5%AD%A6%E4%B9%A0--%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="c-学习"><a href="#c-学习" class="headerlink" title="c++学习"></a>c++学习</h1><h2 id="–运算符重载"><a href="#–运算符重载" class="headerlink" title="–运算符重载"></a>–运算符重载</h2><blockquote><blockquote><p>环境：<br>codeblocks：17.12<br>系统：windows10 家庭版</p></blockquote></blockquote><p><strong>输入输出运算符重载，只能重载成友元函数</strong></p><h3 id="输出运算符重载"><a href="#输出运算符重载" class="headerlink" title="输出运算符重载"></a>输出运算符重载</h3><p>通常情况下，输出符只能直接输出标准类型的值，而我们自定义类型是不能直接输出的<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/c%2B%2B%E5%AD%A6%E4%B9%A0--%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/20190403101633233.png" alt><br>cout返回值为cout<br>cout &lt;&lt; p1 返回值还是cout，因为可以继续加&lt;&lt;输出</p><p>我们在Person对象中声明ostream友元函数<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/c%2B%2B%E5%AD%A6%E4%B9%A0--%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/20190403102842442.png" alt><br><code>friend ostream&amp; operator&lt;&lt;(ostream &amp;outPut,const Person &amp;p);</code><br>然后函数体</p><pre><code>ostream&amp; operator&lt;&lt;(ostream &amp;outPut,const Person &amp;p){    outPut &lt;&lt; p.name &lt;&lt; &quot;-&quot; &lt;&lt; p.address;    return outPut;}</code></pre><p>这个时候我们再去输出p1试试<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/c%2B%2B%E5%AD%A6%E4%B9%A0--%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/20190403103019718.png" alt><br>这个时候可以发现，cout可以直接输出我们的自定义类型</p><h3 id="输入运算符重载"><a href="#输入运算符重载" class="headerlink" title="输入运算符重载"></a>输入运算符重载</h3><p>正常情况下<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/c%2B%2B%E5%AD%A6%E4%B9%A0--%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/20190403112257231.png" alt><br>这样是不行的，不能直接给自定义类型输入值，但是我们重载输入运算符就能自己自定义</p><pre><code>声明：   friend istream&amp; operator&gt;&gt;(istream &amp;inPut, Person &amp;p)函数体istream&amp; operator&gt;&gt;(istream &amp;inPut, Person &amp;p){    p.address = new char[10];    inPut &gt;&gt; p.name &gt;&gt; p.address;    return inPut;}</code></pre><p>测试一下<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/c%2B%2B%E5%AD%A6%E4%B9%A0--%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/20190403020543413.png" alt><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/c%2B%2B%E5%AD%A6%E4%B9%A0--%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/20190403020612308.png" alt><br>重载成功</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>c++学习--类型重载</title>
      <link href="/2019/04/18/c++%E5%AD%A6%E4%B9%A0--%E7%B1%BB%E5%9E%8B%E9%87%8D%E8%BD%BD/"/>
      <url>/2019/04/18/c++%E5%AD%A6%E4%B9%A0--%E7%B1%BB%E5%9E%8B%E9%87%8D%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="c-学习"><a href="#c-学习" class="headerlink" title="c++学习"></a>c++学习</h1><h2 id="–类型重载"><a href="#–类型重载" class="headerlink" title="–类型重载"></a>–类型重载</h2><blockquote><blockquote><p>环境：<br>codeblocks：17.12<br>系统：windows10 家庭版</p></blockquote></blockquote><p>正常情况下，同一个类型只能给同一个类型赋值，如果想要让自定义类和标准类型之间可以复制，这个时候就需要类型重载，我们用成员函数的方式<br>我们定义一个<strong>Time</strong>类，然后有</p><pre><code>hour   小时minute 分second 秒</code></pre><p>然后我们将他赋值给<strong>float</strong>类型，让他将所有时间都换成秒。<br>格式如下</p><pre><code>声明：    operator &lt;类型&gt;()函数体：    &lt;类名&gt;::operator &lt;类型&gt;()    {    }</code></pre><p>实例代码</p><pre><code>#include&lt;iostream&gt;#include&lt;stdio.h&gt;#include&lt;string.h&gt;using namespace std;class Time{private:    int hour, minute,second;public :    Time(int hour, int minute, int second);    void print();    operator float();};Time::Time(int hour,int minute, int second){    this-&gt;hour = hour;    this-&gt;minute = minute;    this-&gt;second = second;}void Time::print(){    cout &lt;&lt;&quot;小时:&quot; &lt;&lt; this-&gt;hour &lt;&lt; endl;    cout &lt;&lt;&quot;分:&quot; &lt;&lt; this-&gt;minute &lt;&lt; endl;    cout &lt;&lt;&quot;秒:&quot; &lt;&lt; this-&gt;second &lt;&lt; endl;}Time::operator float(){    float tamp;    tamp = hour * 3600 + minute * 60 + second;    return tamp;}int main(void){    Time t1(23,30,55);    t1.print();    float f = t1;    cout &lt;&lt; f;    getchar();    return 0;}</code></pre><p>结果<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/c%2B%2B%E5%AD%A6%E4%B9%A0--%E7%B1%BB%E5%9E%8B%E9%87%8D%E8%BD%BD/20190403114204303.png" alt><br>可以看到，float型的f成功赋值</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/04/18/%E9%97%AE%E9%A2%98/"/>
      <url>/2019/04/18/%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E9%97%AE%E9%A2%98/20190409055541933.png" alt><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E9%97%AE%E9%A2%98/20190409055551124.png" alt></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网络连接的三种模式</title>
      <link href="/2019/04/18/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/"/>
      <url>/2019/04/18/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="网络连接的三种模式"><a href="#网络连接的三种模式" class="headerlink" title="网络连接的三种模式"></a>网络连接的三种模式</h1><blockquote><blockquote><p>环境<br>系统：windows10 家庭版<br>linux系统：centos 6.3<br>vm：15.0.3</p></blockquote></blockquote><pre><code>vm自带有3块网卡vmnet0：桥接模式vmnet1：仅主机模式vmnet8：NET模式我们可以打开编辑-&gt;虚拟网络编辑器，里面查看是否有这3块网卡，没有的话，我们可以自行增加</code></pre><p><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190417090323800.png" alt><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190417090438696.png" alt></p><h3 id="1-仅主机模式"><a href="#1-仅主机模式" class="headerlink" title="1.仅主机模式"></a>1.仅主机模式</h3><p>这个模式我们只需要修改虚拟机的连接模式为仅主机模式，设置vm与主机ip在同一个网段，然后将虚拟机ip也设置在同一网段即可。这个时候，我们用主机ping虚拟机，如果能ping通就说明设置成功</p><h5 id="a-查看主机ip"><a href="#a-查看主机ip" class="headerlink" title="a.查看主机ip"></a>a.查看主机ip</h5><p><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190417093745677.png" alt></p><h5 id="b-设置vm的仅主机模式网卡ip"><a href="#b-设置vm的仅主机模式网卡ip" class="headerlink" title="b.设置vm的仅主机模式网卡ip"></a>b.设置vm的仅主机模式网卡ip</h5><p><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190417090910233.png" alt></p><h5 id="c-设置虚拟机连接模式为仅主机模式"><a href="#c-设置虚拟机连接模式为仅主机模式" class="headerlink" title="c.设置虚拟机连接模式为仅主机模式"></a>c.设置虚拟机连接模式为仅主机模式</h5><p>右键点击虚拟机标签<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190417091153136.png" alt><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190417091301956.png" alt></p><h5 id="d-设置虚拟机的ip"><a href="#d-设置虚拟机的ip" class="headerlink" title="d.设置虚拟机的ip"></a>d.设置虚拟机的ip</h5><p>有两种方式，一种是<code>setup</code>命令，到图形界面设置，还有一个是通过文件设置，这里我们都采取文件设置。<br>首先我们进入<code>network-scripts</code>目录查看我们的虚拟网卡，这个是vm配置的<br><code>ls /etc/sysconfig/network-scripts</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190417091900672.png" alt><br>我们可以看到，有个<code>ifcfg-eth0</code>，这就是一块叫eth0的网卡，我们使用<code>ifconfig</code>命令查看网卡是否在使用<br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190417092033945.png" alt><br>这里已经在使用了<br>如果这里没有看到虚拟网卡，只有localhost的话，我们可以使用<code>ifup &lt;虚拟网卡名称&gt;</code>，这个命令启用网卡，比如我就是用<code>ifup eth0</code>，同理，使用<code>ifdown &lt;虚拟网卡名称&gt;</code>，停用网卡，这里不再赘述<br>修改ip，我们使用进入ifcfg-eth0文件<br><code>vim /etc/sysconfig/network-scripts/ifcfg-eth0</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190417092505604.png" alt><br>我们将这个ip修改为<code>192.168.43.253</code>，保存退出，最后一步<br><code>service network restart</code></p><h5 id="e-测试"><a href="#e-测试" class="headerlink" title="e.测试"></a>e.测试</h5><p>主机ping<code>192.168.43.253</code><br><img src="https://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190417092752075.png" alt><br>可以ping通，仅主机模式设置成功<br>如果以上步骤都完成了<br>虚拟机ping不通主机是因为主机有防火墙， 关闭防火墙也能ping通<br>主机ping不通虚拟机，虚拟机防火墙没有关闭</p><hr><h3 id="2-桥接模式"><a href="#2-桥接模式" class="headerlink" title="2.桥接模式"></a>2.桥接模式</h3><p>这个模式我们需要将虚拟机设置为桥接模式，然后修改虚拟机的<strong>网关</strong>和<strong>子网掩码</strong>，和主机正在使用且联网的那块网卡一致，再修改ip地址到同一网段即可</p><h5 id="a-查看主机ip-1"><a href="#a-查看主机ip-1" class="headerlink" title="a.查看主机ip"></a>a.查看主机ip</h5><p><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190418062916493.png" alt></p><h5 id="b-修改虚拟机为桥接模式"><a href="#b-修改虚拟机为桥接模式" class="headerlink" title="b.修改虚拟机为桥接模式"></a>b.修改虚拟机为桥接模式</h5><p><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190418062252478.png" alt><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190418062356772.png" alt></p><h5 id="c-修改虚拟机ip信息"><a href="#c-修改虚拟机ip信息" class="headerlink" title="c.修改虚拟机ip信息"></a>c.修改虚拟机ip信息</h5><p><code>vim /etc/sysconfig/network-scripts/ifcfg-eth0</code><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190418063122341.png" alt></p><pre><code>设置子网掩码：255.255.255.0默认网关：192.168.43.1</code></pre><p>改完别忘记<code>service network restart</code></p><h5 id="d-测试"><a href="#d-测试" class="headerlink" title="d.测试"></a>d.测试</h5><p>我们直接ping<code>baidu.com</code><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190418063742666.png" alt><br>如果可以ping通，代表桥接模式设置成功</p><h3 id="3-NET模式"><a href="#3-NET模式" class="headerlink" title="3.NET模式"></a>3.NET模式</h3><p>这个模式只需要将虚拟机设置为NET模式，设置虚拟机和vm的子网掩码和网关一致，再修改ip为同一网段即可，不用管主机ip</p><h5 id="a-设置vmip信息"><a href="#a-设置vmip信息" class="headerlink" title="a.设置vmip信息"></a>a.设置vmip信息</h5><p><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190418065205550.png" alt><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190418065608463.png" alt><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190418070914844.png" alt><br>这里网关最后一位应为2，因为他是物理机虚拟出来的一个网络，物理机上面的vmnet8这块网卡的网关是不一样的<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190418071045037.png" alt></p><h5 id="b-修改虚拟机为NET模式"><a href="#b-修改虚拟机为NET模式" class="headerlink" title="b.修改虚拟机为NET模式"></a>b.修改虚拟机为NET模式</h5><p><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190418064306987.png" alt><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190418064454848.png" alt></p><h5 id="c-修改虚拟机ip信息-1"><a href="#c-修改虚拟机ip信息-1" class="headerlink" title="c.修改虚拟机ip信息"></a>c.修改虚拟机ip信息</h5><p><code>vim /etc/sysconfig/network-scripts/ifcfg-eth0</code><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190418065721214.png" alt></p><pre><code>设置子网掩码：255.255.255.0默认网关：192.168.255.2ip：192.168.255.253</code></pre><p>改完别忘记<code>service network restart</code></p><h5 id="d-测试-1"><a href="#d-测试-1" class="headerlink" title="d.测试"></a>d.测试</h5><p>我们直接ping<code>baidu.com</code><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F/20190418071149212.png" alt><br>如果可以ping通，代表NET模式设置成功</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux--webmin的安装与使用</title>
      <link href="/2019/04/06/lilux%E7%9B%B8%E5%85%B3/linux--webmin%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/04/06/lilux%E7%9B%B8%E5%85%B3/linux--webmin%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h1><h2 id="–webmin的安装与使用"><a href="#–webmin的安装与使用" class="headerlink" title="–webmin的安装与使用"></a>–webmin的安装与使用</h2><blockquote><blockquote><p>环境：<br>webmin:1.900</p></blockquote></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><a href="https://sourceforge.net/projects/webadmin/files/webmin/1.900/" target="_blank" rel="noopener">webmin下载链接</a><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/linux--webmin%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190406122837265.png" alt><br>下载tar.gz包，上传到linux系统<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/linux--webmin%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190406123059569.png" alt><br>第一个，第二个是轻量的<br><strong>开始安装</strong><br>1.解压缩<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/linux--webmin%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190406123304374.png" alt><br>2.进入解压后的webmin文件目录，执行setup.sh脚本安装<br><code>./setup.sh</code><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/linux--webmin%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190406123435885.png" alt><br>配置文件目录，回车<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/linux--webmin%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190406123456619.png" alt><br>配置日志目录，回车<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/linux--webmin%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190406123627147.png" alt><br>配置perl语言的完整目录，回车<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/linux--webmin%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190406123647558.png" alt><br>配置端口，回车<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/linux--webmin%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190406123710525.png" alt><br>配置登录用户名，回车，默认admin<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/linux--webmin%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190406123727338.png" alt><br>配置密码，配置一下，回车，安装完成<br><strong>webmin的配置文件</strong><br><code>/etc/webmin/miniserv.conf</code><br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/linux--webmin%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190406124600510.png" alt><br>修改密码<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/linux--webmin%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190406010221787.png" alt><br><code>/root/webmin-1.900/changepass.pl /etc/webmin/ admin 000000</code><br>这里<code>/root/webmin-1.900/changepass.pl</code>是解压目录<br><code>/etc/webmin/</code>是安装之后的配置目录<br><code>admin</code>是你要修改的用户的用户名<br><code>000000</code>替换你这个用户的密码<br>如果你连用户都忘了<br><code>vim /etc/webmin/miniserv.users</code><br>进入这个配置文件，可以看到用户名<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/linux--webmin%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190406010617820.png" alt><br><strong>卸载</strong><br><code>/etc/webmin/uninstall.sh</code></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>我们打开浏览器，注意它只支持部分浏览器，ie的不支持，使用ie内核的浏览器也不支持，我之前就是用360结果不行，然后换了火狐就好了<br>输入<br><code>http://localhost:10000</code><br>这个10000端口就是我们安装的时候默认的<br>注意这个<strong>localhost</strong>，你如果是用自己电脑安装的，可以直接用localhost，但是你如果使用的虚拟机，在虚拟机的linux中安装的webmin，那么localhost应该换成虚拟机的ip地址<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/linux--webmin%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190406011125046.png" alt><br>我们输入用户名和密码<br><img src="http://cbw-1258890494.cos.ap-chengdu.myqcloud.com/linux--webmin%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20190406011152227.png" alt><br>登录成功，可以开始使用了</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
